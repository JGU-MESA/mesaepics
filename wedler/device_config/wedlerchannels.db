
#Load DAC register values into DAC
record(stringout, "$(WEDLKI)load_dac")
{
    field (DESC, "Load DAC register values into DAC")
    field (DTYP, "stream")
    field (OUT,  "@wedlkiste.proto loaddac $(PORT)")
}

# on/off state of a channel
record(bi, "$(P)$(R)on_get")
{
    field(DESC, "ON/Off state of selected channel")
    field(DTYP, "stream")
    field(SCAN, "5 second")
    field(INP,  "@wedlkiste.proto stateschan($(CHAN),$(P)$(R)stat_get) $(PORT)")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
    field(FLNK, "$(P)$(R)stat_get.PROC")
}

# error state of a channel
record(mbbi, "$(P)$(R)stat_get")
{
    field(DESC, "Error state of selected channel")
    field(ZRST, "NOERROR")
    field(ONST, "FUSE")    #ERRORS
    field(TWST, "THERM")
    field(THST, "FUSE+THERM")
    field(NIST, "UNDEF")
}

##### old method #####
# on/off state of a channel
#record(bi, "$(P)$(R)on_get")
#{
 #   field(DESC, "ON/Off state of selected channel")
 #   field(DTYP, "stream")
 #   field(INP,  "@wedlkiste.proto statechanonoff($(CHAN)) $(PORT)")
 #   field(SCAN, "5 second")
 #   field(ZNAM, "OFF")
 #   field(ONAM, "ON")
#}

# error state of a channel
#record(mbbi, "$(P)$(R)stat_get")
#{
#    field(DESC, "Error state of selected channel")
#    field(DTYP, "stream")
#    field(INP,  "@wedlkiste.proto statechanerror($(CHAN)) $(PORT)")
#    field(SCAN, "5 second")
#    #field(ZRST, "NOERROR")
#    field(ZRST, "")        #damit im css nichts angezeigt wird, liegt ja kein Fehler vor
#    field(ONST, "FUSE")    #ERRORS
#    field(TWST, "THERM")
#    field(THST, "FUSE+THERM")
#    field(NIST, "UNDEF")
#}

record(ao, "$(WEDLKI)reset_Erroreg")
{
    field(DESC, "Reset Error Register of Wedler PS")
    field(DTYP, "stream")
    field(OUT,  "@wedlkiste.proto resetstatposu  $(PORT)")
    #info(autosaveFields_pass0,"VAL")
    #info(autosaveFields, "VAL")
}

record(ao, "$(WEDLKI)reset_Therm")   
{
    field(DESC, "Reset Thermal-Shutdown-Register")
    field(DTYP, "stream")
    field(OUT,  "@wedlkiste.proto resettherm $(PORT)")
}

### Da beim Einschalten der Wedlerkiste ein reset_Therm und reset_Erroreg gemacht werden muss
### und diese aber auch für das Einschalten eines Kanals benötigt werden, muss der Rekord für das
### Einschalten der Kiste auch hier definiert werden und nicht in wedlkiste.db
record(bo, "$(WEDLKI)on_set")
{
    field(DESC, "Switch on/off Wedler Power Supply")
    field(DTYP, "stream")
    field(OUT,  "@wedlkiste.proto switch $(PORT)")
    field(FLNK, "$(WEDLKI)reset_Therm")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
    info (autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(R)on_set")
{
    field(DESC, "Switch on/off one channel")
    field(DTYP, "stream")
    field(OUT,  "@wedlkiste.proto switchchan($(CHAN)) $(PORT)")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(ai, "$(P)$(R)imax_get")
{
    field(DESC, "Read maximal current of a channel")
    field(DTYP, "stream")
    field(INP,  "@wedlkiste.proto getmaxcurr($(CHAN)) $(PORT)")
    field(PINI, "YES")
    field(EGU,  "A")
    field(PREC, "1")
    field(FLNK, "$(P)$(R)limits1_seq")
    info (autosaveFields_pass0, "VAL")
}

record(calc, "$(P)$(R)calc-imax") {
  field(PINI, "YES")
  field(INPA, "$(P)$(R)imax_get")
  field(CALC, "-A")
}

record(seq, "$(P)$(R)limits1_seq")
{
    field(DESC, "Distribute card current limit")
    field(SELM, "All")
    field(DOL1, "$(P)$(R)imax_get")
    field(DOL2, "$(P)$(R)calc-imax")
    field(DOL3, "$(P)$(R)imax_get")
    field(DOL4, "$(P)$(R)calc-imax")
    field(DOL5, "$(P)$(R)imax_get")
    field(DOL6, "$(P)$(R)imax_get")
    field(DOL7, "$(P)$(R)imax_get")
    field(DOL8, "$(P)$(R)calc-imax")
    field(DOL9, "$(P)$(R)imax_get")
    field(DOLA, "$(P)$(R)imax_get")
    field(LNK1, "$(P)$(R)i_set.EGUF")
    field(LNK2, "$(P)$(R)i_set.DRVL")
    field(LNK3, "$(P)$(R)i_set.DRVH")
    field(LNK4, "$(P)$(R)i_set.LOPR")
    field(LNK5, "$(P)$(R)i_set.HOPR")
    field(LNK6, "$(P)$(R)inom_get.EGUF")
    field(LNK7, "$(P)$(R)inom_get.HOPR")
    field(LNK8, "$(P)$(R)inom_get.LOPR")
    field(LNK9, "$(P)$(R)i_get.EGUF")
    field(LNKA, "$(P)$(R)i_get.HOPR")
    field(FLNK, "$(P)$(R)limits2_seq")
}

record(seq, "$(P)$(R)limits2_seq")
{
    field(DESC, "Distribute card current limit")
    field(SELM, "All")
    field(DOL1, "$(P)$(R)calc-imax")
    field(DOL2, "$(P)$(R)imax_get")
    field(DOL3, "$(P)$(R)imax_get")
    field(DOL4, "$(P)$(R)calc-imax")
    field(LNK1, "$(P)$(R)i_get.LOPR")
    field(LNK2, "$(P)$(R)u_get.EGUF")
    field(LNK3, "$(P)$(R)u_get.HOPR")
    field(LNK4, "$(P)$(R)u_get.LOPR")
}

record(ao, "$(P)$(R)i_set") 
{
    field(DESC, "Set DAC value of a channel")
    #field(OROC, "0")
    field(DTYP, "stream")
    field(OUT,  "@wedlkiste.proto setdacval($(CHAN)) $(PORT)")
    field(SCAN, "Passive")
    field(LINR, "LINEAR")
    field(EGUL, "0")    # Engineering Units Low
    #field(EGUF, ""$(P)$(R)imax_get")    # highest eng. value # Engineering Units Full
    field(EGU,  "A")
    field(PREC, "6")
    #field(DRVL, "$(P)$(R)imax_get")    # max value
    #field(DRVH, "$(P)$(R)imax_get")    # min value
    #field(LOPR, "$(P)$(R)imax_get")    # min display
    #field(HOPR, "$(P)$(R)imax_get")    # max display
    field (PRIO, "HIGH")
    info(autosaveFields_pass0,"VAL")
}

record(ai, "$(P)$(R)inom_get")
{
    field(DESC, "Read DAC register value of a channel")
    field(DTYP, "stream")
    field(INP,  "@wedlkiste.proto getdacval($(CHAN)) $(PORT)")
    field(SCAN, "10 second")
    field(LINR, "LINEAR")
    field(EGUL, "0")
    #field(EGUF, "$(P)$(R)imax_get")
    field(EGU,  "A")
    field(PREC, "6")
    #field(HOPR, "$(P)$(R)imax_get")                # max display
    #field(LOPR, "-$(P)$(R)imax_get")               # min display
}

record(ai, "$(P)$(R)i_get")
{
    field(DESC, "Read measured current of a channel")
    field(DTYP, "stream")
    field(INP,  "@wedlkiste.proto getact($(CHAN),$(P)$(R)vrdy) $(PORT)")
    field(SCAN, "10 second")
    field(LINR, "LINEAR")
    field(EGUL, "0")
    #field(EGUF, "$(P)$(R)imax_get")
    field(EGU,  "A")
    field(PREC, "6")
    #field(HOPR, "$(P)$(R)imax_get")
    #field(LOPR, "-$(P)$(R)imax_get")
    field(FLNK, "$(P)$(R)devi")  # process devi after read
}

record(ai, "$(P)$(R)u_get")
{
    field(DESC, "Read measured voltage of a channel")
    field(DTYP, "stream")
    field(INP,  "@wedlkiste.proto getvolt($(CHAN),$(P)$(R)vrdy) $(PORT)")
    field(SCAN, "10 second")
    field(LINR, "LINEAR")
    field(EGUL, "0")
    #field(EGUF, "$(P)$(R)imax_get")
    field(EGU,  "V")
    field(PREC, "6")
    #field(HOPR, "$(P)$(R)imax_get")
    #field(LOPR, "-$(P)$(R)imax_get")
}

record(calc, "$(P)$(R)devi")
{
    field(DESC, "Diff nominal-actual")
    #field(INPA, "$(P)$(R)inom_get")    # Hajo 29.06.17
    field(INPA, "$(P)$(R)i_set")
    field(INPB, "$(P)$(R)i_get")
    field(INPC, "$(P)$(R)vrdy")
    field(INPD, "1000")
    field(CALC, "(A - B) * C * D")
    field(EGU,  "mA")
    field(PREC, "6")
    field(HOPR, "1000")      #all settings from Hajo
    field(LOPR, "-1000")
    field(HIHI, "500")   
    field(LOLO, "-500")
    field(HIGH, "100")
    field(LOW,  "-100")
    #field(HOPR, "1100")     
    #field(LOPR, "-1100")
    #field(HIHI, "1000")
    #field(LOLO, "-1000")
    #field(HIGH, "900")
    #field(LOW,  "-900")
    field(LLSV, "MAJOR")
    field(LSV,  "MINOR")
    field(HSV,  "MINOR")
    field(HHSV, "MAJOR")
}

# Messwert aktuell
record(bi, "$(P)$(R)vrdy") {
    field(ZNAM, "UNREADY")
    field(ONAM, "READY")
}

include "./db/wobblen.db"


