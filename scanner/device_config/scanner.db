##====================================================
##================== Debug ===========================

record(stringout, "$(P)$(R)debug") {
   field(DTYP, "stream")
   field(OUT, "@scanner.proto debug $(PORT)")
   field(DISP, "1")
}

##====================================================
##================== Device ==========================

record(waveform, "$(P)$(R)DevIdent")
{
    field(DESC, "Get device idenfication of scanner")
    field(DTYP, "stream")
    field(INP, "@scanner.proto getDevIdent $(PORT)")
    field(PINI, "YES")
    field(FTVL, "CHAR")
    field(NELM, "40")
}

##====================================================
##==================  Positions ======================

record(ai, "$(P)$(R)pos_get")
{
    field(DESC, "Get current position of scanner")
    field(DTYP, "stream")
    field(INP, "@scanner.proto getPos $(PORT)")
    #field(SCAN, "1 second")
    field(EGU, "mm")
    field(PREC, "2")
    field(HOPR, "150")
    field(LOPR, "0")
}

##==== STOP =====

record(ao, "$(P)$(R)stoppos_set")
{
    field(DESC, "Set absolute endposition of scanner")
    field(DTYP, "stream")
    field(OUT, "@scanner.proto setStopPos $(PORT)")
    field(EGU, "mm")
    field(PREC, "1")
    field(HOPR, "140")
    field(LOPR, "1")
    field(DRVH, "140")
    field(DRVL, "1")
    field(FLNK, "$(P)$(R)stoppos_get.PROC")
}

record(ai, "$(P)$(R)stoppos_get")
{
    field(DESC, "Get current stopposition of scanner")
    field(DTYP, "stream")
    field(INP, "@scanner.proto getStopPos $(PORT)")
    field(EGU, "mm")
    field(PREC, "2")
    field(HOPR, "150")
    field(LOPR, "0")
    field(FLNK, "$(P)$(R)relpos_get")
}

record(mbbo, "$(P)$(R)stopposdiscrete_set")
{
    field(DESC, "Set absolute endposition of scanner")
    field(DTYP, "stream")
    field(OUT, "@scanner.proto setStopPosDiscrete_$(P) $(PORT)")
    field(ZRST, "nullposition")
    field(ONST, "schirm1")
    field(TWST, "schirm2h")
    field(THST, "schirm2v")
    field(FRST, "scanbegin")
    field(FVST, "scanend")
    field(FLNK, "$(P)$(R)stoppos_get.PROC")
}

##==== START =====

record(ao, "$(P)$(R)startpos_set")
{
    field(DESC, "Set absolute startposition of scanner")
    field(DTYP, "stream")
    field(OUT, "@scanner.proto setStartPos $(PORT)")
    field(EGU, "mm")
    field(PREC, "2")
    field(HOPR, "150")
    field(LOPR, "0")
    field(DRVH, "150")
    field(DRVL, "0")
    field(FLNK, "$(P)$(R)startpos_get.PROC")
}

record(ai, "$(P)$(R)startpos_get")
{
    field(DESC, "Get current startposition of scanner")
    field(DTYP, "stream")
    field(INP, "@scanner.proto getStartPos $(PORT)")
    field(EGU, "mm")
    field(PREC, "2")
    field(HOPR, "150")
    field(LOPR, "0")
    field(FLNK, "$(P)$(R)relpos_get")
}

##==== Relativ to current pos =====

record(ao, "$(P)$(R)relpos_set")
{
    field(DESC, "Set absolute startposition of scanner")
    field(DTYP, "stream")
    field(OUT, "@scanner.proto setRelativePos $(PORT)")
    field(EGU, "mm")
    field(PREC, "2")
    field(HOPR, "150")
    field(LOPR, "-150")
    field(DRVH, "150")
    field(DRVL, "-150")
    field(FLNK, "$(P)$(R)startpos_get.PROC")
}

record(calc, "$(P)$(R)relpos_get")
{
    field(DESC, "Get current startposition of scanner")
    field(INPA, "$(P)$(R)startpos_get")
    field(INPB, "$(P)$(R)stoppos_get")
    field(EGU, "mm")
    field(CALC, "A-B")
    field(PREC, "2")
    field(HOPR, "150")
    field(LOPR, "-150")
    field(PINI, "YES")
}

##====================================================
##================== Start and Stop ==================

record(mbbo, "$(P)$(R)start")
{
    field(DESC, "Start moving of scanner")
    field(DTYP, "stream")
    field(OUT, "@scanner.proto startstop $(PORT)")
    field(ZRST, "Start")
    field(ONST, "Soft Stop")
    field(TWST, "Hard Stop")
}

##====================================================
##================== Running Status ==================

record(mbbi, "$(P)$(R)run_get")
{
    field(DESC, "Is scanner moving?")
    field(DTYP, "stream")
    field(INP, "@scanner.proto running $(PORT)")
    field(ZRST, "Standby")
    field(ONST, "Moving")
    field(THST, "Moving to StartPos")
    field(FVST, "Moving to StopPos")
    #field(SCAN, "1 second")
}

##====================================================
##================== Scanning mode ===================


record(mbbo, "$(P)$(R)mode_set")
{
    field(DESC, "Choose scan mode")
    field(DTYP, "stream")
    field(OUT, "@scanner.proto setMode $(PORT)")
    field(ZRST, "Single")
    field(ONST, "Scan")
    field(FLNK, "$(P)$(R)mode_get.PROC")
}

record(mbbi, "$(P)$(R)mode_get")
{
    field(DESC, "Get current mode")
    field(DTYP, "stream")
    field(INP, "@scanner.proto getMode $(PORT)")
    field(ZRST, "Single")
    field(ONST, "Scan")
}

##====================================================
##================== Repetitions =====================

record(ao, "$(P)$(R)repeat_set")
{
    field(DESC, "Set number of repeats for scanmode")
    field(DTYP, "stream")
    field(OUT, "@scanner.proto setRepeat $(PORT)")
    field(PREC, "0")
    field(DRVH, "1e9")
    field(DRVL, "0")
    field(HOPR, "1e9")
    field(LOPR, "0")
    field(FLNK, "$(P)$(R)repeat_get.PROC")
}

record(ai, "$(P)$(R)repeat_get")
{
    field(DESC, "Get number of completed scans")
    field(DTYP, "stream")
    field(INP, "@scanner.proto getRepeat $(PORT)")
    field(PREC, "0")
    field(HOPR, "1e9")
    field(LOPR, "0")
}

##====================================================
##================== Velocity ========================

record(ao, "$(P)$(R)minvel_set")
{
    field(DESC, "Set minimum velocity")
    field(DTYP, "stream")
    field(OUT, "@scanner.proto setMinVel $(PORT)")
    field(PREC, "1")
    field(DRVH, "24.5")
    field(DRVL, "0")
    field(HOPR, "24.5")
    field(LOPR, "0")
    field(FLNK, "$(P)$(R)minvel_get.PROC")
}

record(ai, "$(P)$(R)minvel_get")
{
    field(DESC, "Get minimum velocity")
    field(DTYP, "stream")
    field(INP, "@scanner.proto getMinVel $(PORT)")
    field(PREC, "1")
    field(HOPR, "24.5")
    field(LOPR, "0")
}

record(ao, "$(P)$(R)maxvel_set")
{
    field(DESC, "Set maximum velocity")
    field(DTYP, "stream")
    field(OUT, "@scanner.proto setMaxVel $(PORT)")
    field(PREC, "1")
    field(DRVH, "24.5")
    field(DRVL, "0")
    field(HOPR, "24.5")
    field(LOPR, "0")
    field(FLNK, "$(P)$(R)maxvel_get.PROC")
}

record(ai, "$(P)$(R)maxvel_get")
{
    field(DESC, "Get maximum velocity")
    field(DTYP, "stream")
    field(INP, "@scanner.proto getMaxVel $(PORT)")
    field(PREC, "1")
    field(HOPR, "24.5")
    field(LOPR, "0")
}

##====================================================
##================== Acceleration 0-24500 ============

record(ao, "$(P)$(R)acc_set")
{
    field(DESC, "Get current acceleration")
    field(DTYP, "stream")
    field(OUT, "@scanner.proto setAcc $(PORT)")
    field(PREC, "2")
    field(DRVH, "24500")
    field(DRVL, "0")
    field(HOPR, "24500")
    field(LOPR, "0")
    field(FLNK, "$(P)$(R)acc_get.PROC")
}

record(ai, "$(P)$(R)acc_get")
{
    field(DESC, "Get current acceleration")
    field(DTYP, "stream")
    field(INP, "@scanner.proto getAcc $(PORT)")
    field(PREC, "2")
    field(HOPR, "24500")
    field(LOPR, "0")
}

##====================================================
##================== Deceleration 0-24500 ============

record(ao, "$(P)$(R)dec_set")
{
    field(DESC, "Set current deceleration")
    field(DTYP, "stream")
    field(OUT, "@scanner.proto setDec $(PORT)")
    field(PREC, "2")
    field(DRVH, "24500")
    field(DRVL, "0")
    field(HOPR, "24500")
    field(LOPR, "0")
    field(FLNK, "$(P)$(R)dec_get.PROC")
}

record(ai, "$(P)$(R)dec_get")
{
    field(DESC, "Get current deceleration")
    field(DTYP, "stream")
    field(INP, "@scanner.proto getDec $(PORT)")
    field(PREC, "2")
    field(HOPR, "24500")
    field(LOPR, "0")
}

##====================================================
##================== Datastorage =====================

record(bo, "$(P)$(R)resetData")
{
    field(DESC, "Reset last datastorage")
    field(DTYP, "stream")
    field(OUT, "@scanner.proto resetData $(PORT)")
}

record(calc, "$(P)$(R)DataInput_ch_set")
{
    field(DESC, "Select DataInput channel")
    field(HOPR, "7")
    field(LOPR, "0")
    field(PREC, "0")
    field(CALC, "0")
    field(FLNK, "$(P)$(R)DataInput_ch_fan.PROC")
}

record(fanout, "$(P)$(R)DataInput_ch_fan")
{
    field(LNK1, "$(P)$(R)DataValueNo_get")
    field(LNK2, "$(P)$(R)DataInput_get")
}

record(ai, "$(P)$(R)DataValueNo_get")
{
    field(DESC, "Read number of samples")
    field(DTYP, "stream")
    field(INP, "@scanner.proto getDataValueNo($(P)$(R)DataInput_ch_set) $(PORT)")
    field(HOPR, "1000000")
    field(LOPR, "0")
    field(PINI, "YES")
}

record(aai, "$(P)$(R)DataValue_get")
{
    field(DESC, "Read samples")
    field(DTYP, "stream")
    field(INP, "@scanner.proto getDataValue($(P)$(R)DataInput_ch_set) $(PORT)")
    field(NELM, "2500")
    field(FTVL, "LONG")
    field(FLNK, "$(P)$(R)DataValueNo_get")
}

record(ai, "$(P)$(R)DataInput_get")
{
    field(DESC, "Read input of current channel")
    field(DTYP, "stream")
    field(INP, "@scanner.proto getDataInput($(P)$(R)DataInput_ch_set) $(PORT)")
    field(HOPR, "15")
    field(LOPR, "0")
    field(PINI, "YES")
}

record(mbbo, "$(P)$(R)DataInput_set")
{
    field(DESC, "Select input of current channel")
    field(DTYP, "stream")
    field(OUT, "@scanner.proto setDataInput($(P)$(R)DataInput_ch_set) $(PORT)")
    field(ZRST, "Analogeingang 0")
    field(ONST, "Aktuelle Geschwindigkeit")
    field(TWST, "AktuellerRampenwert")
    field(THST, "PID Regler P-Term")
    field(FRST, "PID Regler I-Term")
    field(FVST, "PID Regler D-Term")
    field(SXST, "Ausgang PID Regler")
    field(SVST, "Ausgang DAC")
    field(EIST, "Eventcounter Zaehler 0")
    field(NIST, "Eventcounter Zaehler 1")
    field(TEST, "Eventcounter Zaehler 2")
    field(ELST, "Eventcounter Zaehler 3")
    field(TVST, "Eventcounter Zaehler 4")
    field(TTST, "Analogeingang 1")
    field(FTST, "Analogeingang 2")
    field(FFST, "Analogeingang 3")
    field(FLNK, "$(P)$(R)DataInput_get.PROC")
}

