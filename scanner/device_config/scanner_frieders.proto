Terminator = CR LF;

getDevIdent{
    out "*IDN?";
    in "%40c";
}

getPos{
    out "SCAN:POSI?";
    in "%f";
}

getStopPos{
    out "SCAN:STOP?";
    in "%f";
    @init{
         out "SCAN:STOP?";
        in "%f";
    }
}

getStartPos{
    out "SCAN:STAR?";
    in "%f";
}

getMaxVel{
    out "SCAN:MAXI?";
    in "%f";
    @init {
        out "SCAN:MAXI?";
        in "%f";}
}

getMinVel{
    out "SCAN:MINI?";
    in "%f";
    @init {
        out "SCAN:MINI?";
        in "%f";}
}

getAcc{
    out "SCAN:ACCE?";
    in "%f";
    @init {     out "SCAN:ACCE?";
         in "%f";}
}

getRepeat{
    out "SCAN:PASS?";
    in "%i";
    @init {     out "SCAN:PASS?";
         in "%i";}
}



setStopPos{
    out "SCAN:STOP %f";
    in "OK";
#    @init { getStopPos; }
}

setStopPosDiscrete{
    out "SCAN:STOP %{64.8|2.8|147.3|138.3|30|120}";
    in "OK";
#    @init { getStopPos; }
}

setStartPos{
    out "SCAN:STAR %f";
    in "OK";
#    @init { getStartPos; }
}

start{
    out "SCAN:COMM start";
    in "OK";
}

running{
    out "SCAN:ISRU?";
    in "%i";
}

singlemode{
    out "SCAN:MODE single";
    in "OK";
    @init {     out "SCAN:MODE single";
         in "OK"; }
}

scanmode{
    out "SCAN:MODE scan";
    in "OK";
}

getMode{
    out "SCAN:MODE?";
    in "%s";
    @init {     out "SCAN:MODE?";
         in "%s";}
}
	
setRepeat{
    out "SCAN:REPE %i";
    in "OK";
    @init {     out "SCAN:REPE 0";
         in "OK";}
}

setMinVel{
    out "SCAN:MINI %f";
    in "OK";
    @init {getMinVel;}
}

setMaxVel{
    out "SCAN:MAXI %f";
    in "OK";
    @init {getMaxVel;}
}

#####============ Photomultiplier gains =================

setPMGain{
    out "SCAN:DOUT %i";
    in "OK";
    @mismatch{
        in "Scaled value out of range";
    }
    #@init {
        #out "SCAN:DOUT 0";
        #in "OK";}
}

getPMGain{
    out "SCAN:DOUT?";
    in "%i";
    @init{
        out "SCAN:DOUT?";
        in "%i";
    }
}

#####============ Analog inputs =================

getAI{
    out "SCAN:AIN\$1:VALU?";
    in "%f";
}

setAVER{
    out "SCAN:AIN\$1:AVER %i";
    in "OK";
}

########## Schirmpositionen für melba_050:scan ###################
#
#melba050scan_nullposition{
#    out "SCAN:STOP 63";
#    in "OK";
#    @init { out "SCAN:STOP 63";
#         in "OK";}
#}
#
#melba050scan_schirm1{
#    out "SCAN:STOP 1";
#    in "OK";
#}
#
#melba050scan_schirm2h{
#    out "SCAN:STOP 145.5";
#    in "OK";
#}
#
#melba050scan_schirm2v{
#    out "SCAN:STOP 136.5";
#    in "OK";
#}
#
#melba050scan_scanbegin{
#    out "SCAN:STAR 28.2";
#    in "OK";
#    @init { out "SCAN:STAR 28.2";
#         in "OK";}
#}
#
#melba050scan_scanend{
#    out "SCAN:STOP 118.2";
#    in "OK";
#}
#
########## Schirmpositionen für melba_020:scan ###################
#
#melba020scan_nullposition{
#    out "SCAN:STOP 64.8";
#    in "OK";
#}
#
#melba020scan_schirm1{
#    out "SCAN:STOP 2.8";
#    in "OK";
#}
#
#melba020scan_schirm2h{
#    out "SCAN:STOP 147.3";
#    in "OK";
#}
#
#melba020scan_schirm2v{
#    out "SCAN:STOP 138.3";
#    in "OK";
#}
#
#melba020scan_scanbegin{
#    out "SCAN:STAR 30";
#    in "OK";
#}
#
#melba020scan_scanend{
#    out "SCAN:STOP 120";
#    in "OK";
#}
